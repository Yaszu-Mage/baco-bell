[gd_scene load_steps=9 format=3 uid="uid://lr31gee33g02"]

[ext_resource type="SpriteFrames" uid="uid://dn1k56v7ba446" path="res://scenes/fight_prototype/sprite_frames/shade.tres" id="2_q7f58"]

[sub_resource type="GDScript" id="GDScript_hb6gk"]
script/source = "extends CharacterBody3D

@onready var agent = $NavigationAgent3D
var player : Node = self
var SPEED = 5.0
var wandering = false
var movement_delta: float
@export var can_move = false
var enemy_type = \"cuber\"
var fight_instance
@export var in_fight = true
var local_fight = false
var username = \"Cuber\"
@onready var sub_tex = $SubViewport.get_texture()
@onready var sub = $SubViewport
@onready var sub_cam = $SubViewport/Camera3D
@onready var health_bar = $SubViewport2/ProgressBar
var health = 2
var did_die = false
@export var movement_speed: float = 4.0
func _ready() -> void:
	player = null
	health_bar.max_value = health
	wander()
func _process(delta):
	if !in_fight and !can_move and !local_fight:
		self.visible = false
		self.set_collision_layer_value(1,false)
	rpc(\"pos\",global_position)
	sub_cam.global_position = self.global_position + Vector3(0,0,1.689)
	health_bar.value = health
	if health <= 0 and !did_die:
		death()
		did_die = true
func _physics_process(delta: float) -> void:
	if not is_on_floor():
			velocity += get_gravity() * delta
	rpc(\"pos\",global_position)
	if can_move:
		if player != null:
			SPEED = 5
			agent.target_position = player.global_position
				# Do not query when the map has never synchronized and is empty.
			if NavigationServer3D.map_get_iteration_id(agent.get_navigation_map()) == 0:
				return
			if agent.is_navigation_finished():
				return

			movement_delta = movement_speed * delta
			var next_path_position: Vector3 = agent.get_next_path_position()
			var new_velocity: Vector3 = global_position.direction_to(next_path_position) * movement_delta
			if agent.avoidance_enabled:
				agent.set_velocity(new_velocity)
			else:
				_on_navigation_agent_3d_velocity_computed(new_velocity)
		else:
			SPEED = 2
			if NavigationServer3D.map_get_iteration_id(agent.get_navigation_map()) == 0:
				return
			movement_delta = movement_speed * delta
			var next_path_position: Vector3 = agent.get_next_path_position()
			var new_velocity: Vector3 = global_position.direction_to(next_path_position) * movement_delta
			if agent.avoidance_enabled:
				agent.set_velocity(new_velocity)
			else:
				_on_navigation_agent_3d_velocity_computed(new_velocity)
	move_and_slide()


func _on_navigation_agent_3d_velocity_computed(safe_velocity: Vector3) -> void:
	global_position = global_position.move_toward(global_position + safe_velocity, movement_delta)
	move_and_slide()


func _on_i_can_see_you_body_entered(body: Node3D) -> void:
	if body.is_in_group(\"player\"):
		player = body


func _on_i_can_see_you_body_exited(body: Node3D) -> void:
	if player == body:
		player = null
@rpc(\"any_peer\")
func pos(pos):
	global_position = pos

@rpc(\"any_peer\")
func sync_vars(move):
	can_move = move
func turn():
	if health > 0:
		var random = randi_range(0,0)
		match random:
			0:
				var combatants = fight_instance.get_combatants(str(get_parent().name))
				var size = combatants.size()
				var random_key = combatants.keys()[randi() % size]
				var amount = combatants[random_key]
				print(amount)
				await get_tree().create_timer(1.0)
				fight_instance.run_action(str(self.name),\"Punch\",str(amount.name))
	else:
		fight_instance.run_action(str(self.name),\"Pass\")

func walk_up(target_pos : Vector3):
	var tween = create_tween()
	tween.tween_property(self,\"global_position\",target_pos - Vector3(1,1,1),1)
func wander():
	await get_tree().create_timer(1.0).timeout
	if wandering and player == null:
		return
	else:
		var original = Vector3(global_position.x,global_position.y,global_position.z)
		var target = Vector3(global_position.x + randi_range(-5,5),global_position.y,global_position.z + randi_range(-5,5))
		agent.target_position = target
		await agent.target_reached
		agent.target_position = original
	wander()


func _on_visible() -> void:
	if is_multiplayer_authority():
		print(visible)
		visible = true


func _on_invisible() -> void:
	if is_multiplayer_authority():
		print(visible)
		visible = false
func damage(value):
	health -= value

func _on_start_fight_body_entered(body: Node3D) -> void:
	if body.is_in_group(\"player\") and can_move:
		body.start_fight(self)

func death():
	fight_instance.enemies.remove_at(fight_instance.enemies.find(str(get_parent().name)))
	fight_instance.kill_me(str(get_parent().name))
	rpc(\"death_rpc\")
	await get_tree().create_timer(1.0).timeout
	
	get_parent().queue_free()


@rpc(\"any_peer\")
func death_rpc():
	self.queue_free()
"

[sub_resource type="BoxShape3D" id="BoxShape3D_68j4o"]

[sub_resource type="SphereShape3D" id="SphereShape3D_68j4o"]
radius = 0.780981

[sub_resource type="SphereShape3D" id="SphereShape3D_eib84"]
radius = 2.14702

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_eib84"]
properties/0/path = NodePath(".:position")
properties/0/spawn = true
properties/0/replication_mode = 1
properties/1/path = NodePath(".:in_fight")
properties/1/spawn = true
properties/1/replication_mode = 1
properties/2/path = NodePath(".:can_move")
properties/2/spawn = true
properties/2/replication_mode = 1

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_eib84"]
bg_color = Color(0.988235, 0, 0.0823529, 1)

[sub_resource type="ViewportTexture" id="ViewportTexture_eib84"]
viewport_path = NodePath("SubViewport2")

[node name="shade" type="CharacterBody3D" groups=["enemies"]]
script = SubResource("GDScript_hb6gk")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("BoxShape3D_68j4o")

[node name="NavigationAgent3D" type="NavigationAgent3D" parent="."]

[node name="start_fight" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="start_fight"]
shape = SubResource("SphereShape3D_68j4o")

[node name="I can see you" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="I can see you"]
shape = SubResource("SphereShape3D_eib84")

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_eib84")

[node name="SubViewport" type="SubViewport" parent="."]

[node name="Camera3D" type="Camera3D" parent="SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.93489)
current = true

[node name="SubViewport2" type="SubViewport" parent="."]
disable_3d = true
transparent_bg = true

[node name="ProgressBar" type="ProgressBar" parent="SubViewport2"]
custom_minimum_size = Vector2(220, 27)
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -97.47
offset_right = 122.53
offset_bottom = 27.0
grow_horizontal = 2
theme_override_styles/fill = SubResource("StyleBoxFlat_eib84")
max_value = 10.0
value = 5.0
show_percentage = false

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0182662, -0.450278, -0.0632565)
visible = false
billboard = 2
texture = SubResource("ViewportTexture_eib84")

[node name="AnimatedSprite3D" type="AnimatedSprite3D" parent="."]
transform = Transform3D(0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0.68258, 0)
billboard = 2
shaded = true
texture_filter = 0
sprite_frames = ExtResource("2_q7f58")
animation = &"idle"
frame_progress = 0.13541

[connection signal="velocity_computed" from="NavigationAgent3D" to="." method="_on_navigation_agent_3d_velocity_computed"]
[connection signal="body_entered" from="start_fight" to="." method="_on_start_fight_body_entered"]
[connection signal="body_entered" from="I can see you" to="." method="_on_i_can_see_you_body_entered"]
[connection signal="body_exited" from="I can see you" to="." method="_on_i_can_see_you_body_exited"]
